*lazydev.nvim.txt*        For Neovim >= 0.8.0        Last change: 2024 June 02

==============================================================================
Table of Contents                             *lazydev.nvim-table-of-contents*

1. lazydev.nvim                                    |lazydev.nvim-lazydev.nvim|
  - Features                              |lazydev.nvim-lazydev.nvim-features|
  - Limitations                        |lazydev.nvim-lazydev.nvim-limitations|
  - Requirements                      |lazydev.nvim-lazydev.nvim-requirements|
  - Installation                      |lazydev.nvim-lazydev.nvim-installation|
  - Configuration                    |lazydev.nvim-lazydev.nvim-configuration|
2. Links                                                  |lazydev.nvim-links|

==============================================================================
1. lazydev.nvim                                    *lazydev.nvim-lazydev.nvim*

**lazydev.nvim** is a plugin that properly configures LuaLS
<https://luals.github.io/> for editing your **Neovim** config by lazily
updating your workspace libraries.


FEATURES                                  *lazydev.nvim-lazydev.nvim-features*

- much faster auto-completion, since only the modules you `require`
    in open Neovim files will be loaded.
- no longer needed to configure what plugin sources you want
    to have enabled for a certain project
- load third-party addons from LLS-Addons <https://github.com/LuaLS/LLS-Addons>
- will update your workspace libraries for:
    - **require** statements: `require("nvim-treesitter")`
    - **module annotations**`---@module "nvim-treesitter"`
- nvim-cmp <https://github.com/hrsh7th/nvim-cmp> completion source for the above


LIMITATIONS                            *lazydev.nvim-lazydev.nvim-limitations*

- If you have files that only use types from a plugin,
    then those types won’t be available in your workspace.
- completion for module names when typing `require(...)`
    will only return loaded modules in your workspace.
- To get around the above, you can:
    - pre-load those plugins with the `library` option.
    - use the **nvim-cmp** completion source to get all available modules.
- Neovim types are **NOT** included and also no longer needed
    on **Neovim >= 0.10**


REQUIREMENTS                          *lazydev.nvim-lazydev.nvim-requirements*

- Neovim >= 0.10.0
- lazy.nvim <https://github.com/folke/lazy.nvim> plugin manager
    - **OR** a plugin manager that uses **Neovim**’s native package system


INSTALLATION                          *lazydev.nvim-lazydev.nvim-installation*

With lazy.nvim <https://github.com/folke/lazy.nvim>

>lua
    return {
      {
        "folke/lazydev.nvim",
        ft = "lua", -- only load on lua files
        opts = {
          library = {
            vim.env.LAZY .. "/luvit-meta/library", -- see below
            -- You can also add plugins you always want to have loaded.
            -- Useful if the plugin has globals or types you want to use
            -- vim.env.LAZY .. "/LazyVim", -- see below
          },
        },
      },
      { "Bilal2453/luvit-meta", lazy = true }, -- optional `vim.uv` typings
      { -- optional completion source for require statements and module annotations
        "hrsh7th/nvim-cmp",
        opts = function(_, opts)
          opts.sources = opts.sources or {}
          table.insert(opts.sources, {
            name = "lazydev",
            group_index = 0, -- set group index to 0 to skip loading LuaLS completions
          })
        end,
      },
      -- { "folke/neodev.nvim", enabled = false }, -- make sure to uninstall or disable neodev.nvim
    }
<


CONFIGURATION                        *lazydev.nvim-lazydev.nvim-configuration*


  [!TIP] You can force enable/disable **lazydev** in certain project folders
  using |:h 'exrc'| with `vim.g.lazydev_enabled = true` or `vim.g.lazydev_enabled
  = false`
Default settings:

>lua
    {
      runtime = vim.env.VIMRUNTIME --[[@as string]],
      library = {}, ---@type string[]
      ---@type boolean|(fun(client:vim.lsp.Client):boolean?)
      enabled = function(client)
        if vim.g.lazydev_enabled ~= nil then
          return vim.g.lazydev_enabled
        end
        return client.root_dir and vim.uv.fs_stat(client.root_dir .. "/lua") and true or false
      end,
      -- add the cmp source for completion of:
      -- `require "modname"`
      -- `---@module "modname"`
      cmp = true,
    }
<

==============================================================================
2. Links                                                  *lazydev.nvim-links*

1. *2024-06-01_21-02-40*: https://github.com/folke/lazydev.nvim/assets/292349/c5f23225-88eb-454d-9b4e-1bf9183f7ff8

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
